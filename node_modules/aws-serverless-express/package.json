{
  "_args": [
    [
      {
        "raw": "aws-serverless-express@^3.3.5",
        "scope": null,
        "escapedName": "aws-serverless-express",
        "name": "aws-serverless-express",
        "rawSpec": "^3.3.5",
        "spec": ">=3.3.5 <4.0.0",
        "type": "range"
      },
      "D:\\interviwes\\pulumi-Elixir-simple-webserver\\node_modules\\@pulumi\\cloud-aws"
    ]
  ],
  "_from": "aws-serverless-express@^3.3.5",
  "_hasShrinkwrap": false,
  "_id": "aws-serverless-express@3.3.8",
  "_location": "/aws-serverless-express",
  "_nodeVersion": "12.16.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/aws-serverless-express_3.3.8_1585183261293_0.7826722225815603"
  },
  "_npmUser": {
    "name": "brettstack",
    "email": "brett.j.andrews@gmail.com"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "aws-serverless-express@^3.3.5",
    "scope": null,
    "escapedName": "aws-serverless-express",
    "name": "aws-serverless-express",
    "rawSpec": "^3.3.5",
    "spec": ">=3.3.5 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@pulumi/cloud-aws"
  ],
  "_resolved": "https://registry.npmjs.org/aws-serverless-express/-/aws-serverless-express-3.3.8.tgz",
  "_shasum": "8c05e0ce3651fc277725c6d2e1b8f8a36dbe4f4b",
  "_shrinkwrap": null,
  "_spec": "aws-serverless-express@^3.3.5",
  "_where": "D:\\interviwes\\pulumi-Elixir-simple-webserver\\node_modules\\@pulumi\\cloud-aws",
  "bugs": {
    "url": "https://github.com/awslabs/aws-serverless-express/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "binary-case": "^1.0.0",
    "type-is": "^1.6.16"
  },
  "description": "This library enables you to utilize AWS Lambda and Amazon API Gateway to respond to web and API requests using your existing Node.js application framework.",
  "devDependencies": {
    "@commitlint/config-conventional": "^8.3.4",
    "@commitlint/travis-cli": "^8.3.5",
    "@semantic-release/changelog": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/npm": "^7.0.5",
    "commitizen": "^3.0.7",
    "commitlint": "^8.3.5",
    "cz-conventional-changelog": "^2.1.0",
    "eslint": "^6.8.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-node": "^11.0.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "husky": "^0.15.0-rc.4",
    "jest": "^24.5.0",
    "lint-staged": "^7.2.0",
    "semantic-release": "^17.0.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2TQdF5EhxnAtGeEi+wSi2M3xCfpiemuImnpU7HKih3onH0izJ/G2tkM+gwcGHZEsW/gLWFl/JjQAYGa3fILfvw==",
    "shasum": "8c05e0ce3651fc277725c6d2e1b8f8a36dbe4f4b",
    "tarball": "https://registry.npmjs.org/aws-serverless-express/-/aws-serverless-express-3.3.8.tgz",
    "fileCount": 9,
    "unpackedSize": 32805,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJee/odCRA9TVsSAnZWagAA/X8P/3329CpUYROL7xgnhpEP\nBSLTNatUwaSUP1rBKhaRJIpY1JRqkFBlXaZ47j86ki37SA9Z6CD1e6X1VNOs\nDNG2e10zPXkoIO5Zu08FEz7N7iH6s1rxnCiDulFrIZh3U5uzjhp04+CuGpqO\nnnJmoEAWIE2ZWdYacdd7JGEy8ZGtTVa9XysaA56S9w6iYN5Pzz9kJMCWAXkV\n/HW73T7UIGlRFsvwElJ4blbRVYlLX0B+FlojSx771e823XRxBXfxENoZZhHM\nXIzLw8/0Ui3d8lHNHCMnvCx3DH5vB0Cwp51x7p6EiSIcPSza4e2z6w0v+Rsi\njy+430wqBLqFQQ6h/tix/cPz+K7DS+AqNdCAmUZ67KtSN5ORmquxcZ+7+NY9\n6Y+uGEyRgYEybQuu2f/eAO9LFuUryL00DS9oS4tCdnA6Z0xENDRBdA+gt8oC\nkbyvF3KdQKGesPEiyGEgNXm8/BDXocRzhg6raNjRXnL+Ngz5EoHCY/0r0O4I\nz3Pon4du761YiGjmtTrMgHEGiDr2Yajy+8q5ifN4An2cFrGNuunJqC+O300t\n9INFCqPKB4w4uXjrlcjdIrl+yALGwtA2ktGj7OPehtEZTdSgy9JMQ6/ryNiI\ni3LI71cxhw0xQ4y/U2YtMdhe6/YDWGIrO4S1fv9WmfsMVAr48cq0IA8E0BDh\ns73m\r\n=vP6L\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "eslintIgnore": [
    "examples/*/node_modules"
  ],
  "files": [
    "index.js",
    "middleware.js",
    "src/"
  ],
  "gitHead": "76a451816bbbeb77d2597dd80be684612e56cd7a",
  "homepage": "https://github.com/awslabs/aws-serverless-express",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run install-example-dependencies && npm test",
      "commit-msg": "commitlint -e $GIT_PARAMS"
    }
  },
  "jest": {
    "collectCoverageFrom": [
      "src/*"
    ]
  },
  "keywords": [
    "aws",
    "serverless",
    "api",
    "gateway",
    "lambda",
    "express"
  ],
  "license": "Apache-2.0",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "amzn-oss",
      "email": "osa-3p@amazon.com"
    },
    {
      "name": "brettstack",
      "email": "brett.j.andrews@gmail.com"
    }
  ],
  "name": "aws-serverless-express",
  "optionalDependencies": {},
  "readme": "# AWS Serverless Express\n\n[![Join the chat at https://gitter.im/awslabs/aws-serverless-express](https://badges.gitter.im/awslabs/aws-serverless-express.svg)](https://gitter.im/awslabs/aws-serverless-express?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/awslabs/aws-serverless-express.svg?branch=master)](https://travis-ci.org/awslabs/aws-serverless-express) [![npm](https://img.shields.io/npm/v/aws-serverless-express.svg)]() [![npm](https://img.shields.io/npm/dm/aws-serverless-express.svg)]() [![dependencies Status](https://david-dm.org/awslabs/aws-serverless-express/status.svg)](https://david-dm.org/awslabs/aws-serverless-express) [![devDependencies Status](https://david-dm.org/awslabs/aws-serverless-express/dev-status.svg)](https://david-dm.org/awslabs/aws-serverless-express?type=dev)\n\nRun serverless applications and REST APIs using your existing [Node.js](https://nodejs.org/) application framework, on top of [AWS Lambda](https://aws.amazon.com/lambda/) and [Amazon API Gateway](https://aws.amazon.com/api-gateway/). The sample provided allows you to easily build serverless web applications/services and RESTful APIs using the [Express](https://expressjs.com/) framework.\n\n## Getting Started\n\n```bash\nnpm install aws-serverless-express\n```\n\n```js\n// lambda.js\n'use strict'\nconst awsServerlessExpress = require('aws-serverless-express')\nconst app = require('./app')\nconst server = awsServerlessExpress.createServer(app)\n\nexports.handler = (event, context) => { awsServerlessExpress.proxy(server, event, context) }\n```\n\n[Package and create your Lambda function](http://docs.aws.amazon.com/lambda/latest/dg/nodejs-create-deployment-pkg.html), then configure a simple proxy API using Amazon API Gateway and integrate it with your Lambda function.\n\n## Quick Start/Example\n\nWant to get up and running quickly? [Check out our basic starter example](examples/basic-starter) which includes:\n\n - Lambda function\n - Express server\n [Swagger file](http://swagger.io/specification/)\n - [Serverless Application Model (SAM)](https://github.com/awslabs/serverless-application-model)/[CloudFormation](https://aws.amazon.com/cloudformation/aws-cloudformation-templates/) template\n - Helper scripts to configure, deploy, and manage your application\n\n### Getting the API Gateway event object\nThis package includes middleware to easily get the event object Lambda receives from API Gateway\n\n```js\nconst awsServerlessExpressMiddleware = require('aws-serverless-express/middleware')\napp.use(awsServerlessExpressMiddleware.eventContext())\napp.get('/', (req, res) => {\n  res.json(req.apiGateway.event)\n})\n```\n\n### Is AWS serverless right for my app?\n\n#### Benefits\n\n - Pay for what you use\n - No infrastructure to manage\n - Auto-scaling with no configuration needed\n - [Usage Plans](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html)\n - [Caching](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html)\n - [Authorization](http://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-control-access-to-api.html)\n - [Staging](http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html)\n - [SDK Generation](http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-generate-sdk.html)\n - [API Monitoring](http://docs.aws.amazon.com/apigateway/latest/developerguide/monitoring-cloudwatch.html)\n - [Request Validation](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html)\n - [Documentation](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html)\n\n#### Considerations\n\n - For apps that may not see traffic for several minutes at a time, you could see [cold starts](https://aws.amazon.com/blogs/compute/container-reuse-in-lambda/)\n - Cannot use native libraries (aka [Addons](https://nodejs.org/api/addons.html)) unless you package your app on an EC2 machine running Amazon Linux\n - Stateless only\n - API Gateway has a timeout of 29 seconds, and Lambda has a maximum execution time of 15 minutes.\n",
  "readmeFilename": "README.md",
  "release": {
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "plugins": [
      [
        "@semantic-release/changelog",
        {
          "changelogFile": "CHANGELOG.md"
        }
      ],
      [
        "@semantic-release/npm",
        {
          "npmPublish": true,
          "tarballDir": "dist"
        }
      ],
      [
        "@semantic-release/git",
        {
          "assets": [
            "package.json",
            "package-lock.json",
            "CHANGELOG.md",
            "dist/**/*.{js|css}"
          ],
          "message": "chore(release): version ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        }
      ],
      [
        "@semantic-release/github",
        {
          "assets": "dist/*.tgz"
        }
      ]
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/awslabs/aws-serverless-express.git"
  },
  "scripts": {
    "check-dependencies": "npx npm-check --skip-unused --update",
    "coverage": "jest --coverage",
    "cz": "git-cz",
    "install-example-dependencies": "cd examples && npm install --prefix basic-starter basic-starter && cd ..",
    "lint": "eslint src examples",
    "release": "semantic-release",
    "release-local": "node -r dotenv/config node_modules/semantic-release/bin/semantic-release --no-ci --dry-run",
    "test": "jest",
    "test:watch": "jest --watch"
  },
  "version": "3.3.8"
}
